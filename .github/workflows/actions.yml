name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: ubuntu-latest
            c_compiler: clang

    steps:
    - uses: actions/checkout@v3

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

    - name: Zip artifacts
      if: ${{ runner.os }} == 'Windows' && startsWith(github.ref, 'refs/tags/')
      run: Compress-Archive ${{ steps.strings.outputs.build-output-dir }}/*.exe artifacts/${{ runner.os }}_${{ runner.arch }}.zip

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3.1.3
      if: ${{ runner.os }} == 'Windows' && startsWith(github.ref, 'refs/tags/')
      with:
        name: artifact_${{ matrix.os }}_${{ matrix.build_type }}
        path: artifacts/*

  release:
    runs-on: ubuntu-latest
    needs: [build]

    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2.1.1
      with:
        path: artifacts/

    - name: Release
      uses: softprops/action-gh-release@v0.1.15

      with:
        name: Latest
        prerelease: true
        files: artifacts/*
